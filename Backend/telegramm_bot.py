import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from db_utils import add_user, get_user, award_referral_bonus

TOKEN = '7636282193:AAHHIcQdFrM5ZV2_ObyjjjvUwCqr6FFjL2U'  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
apiserv = "https://4e27-57-129-20-194.ngrok-free.app"  # —Å—é–¥–∞ –ø–æ–¥—Å—Ç–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ ngrok, –Ω–∞–ø—Ä–∏–º–µ—Ä https://1234abcd.ngrok-free.app
your_channel = "https://t.me/your_channel"

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name or "User"
    args = message.text.split()[1:] if len(message.text.split()) > 1 else []
    web_app_url = f"{apiserv}/?user_id={user_id}&username={username}"

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ò–≥—Ä–∞—Ç—å –≤ 1 –∫–ª–∏–∫ üéÆ', web_app=WebAppInfo(url=web_app_url))],
        [InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª üì¢', url=your_channel)],
        [InlineKeyboardButton(text='–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –∏–≥—Ä–µ üí∞', callback_data='how_to_earn')]
    ])

    referrer_id = None
    if args and args[0].startswith('referrer_'):
        referrer_id = args[0].split('_')[1]

    existing_user = get_user(user_id)
    if existing_user:
        await message.answer(
            "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MMM Coin üéÆ!\n"
            "–û—Ç–Ω—ã–Ω–µ —Ç—ã ‚Äî –¥–∏—Ä–µ–∫—Ç–æ—Ä. –¢–∞–ø–∞–π –ø–æ —ç–∫—Ä–∞–Ω—É, —Å–æ–±–∏—Ä–∞–π –º–æ–Ω–µ—Ç—ã, –∫–∞—á–∞–π –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥, —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–π —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.\n"
            "–ó–æ–≤–∏ –¥—Ä—É–∑–µ–π ‚Äî –≤–º–µ—Å—Ç–µ –±–æ–Ω—É—Å—ã –±–æ–ª—å—à–µ!",
            reply_markup=keyboard
        )
        return

    new_user = add_user(user_id, username, referrer_id=referrer_id)
    if referrer_id:
        premium_status = False  # –µ—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ premium check
        award_referral_bonus(user_id, referrer_id, premium_status)

    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MMM Coin üéÆ!\n"
        "–û—Ç–Ω—ã–Ω–µ —Ç—ã ‚Äî –¥–∏—Ä–µ–∫—Ç–æ—Ä. –¢–∞–ø–∞–π –ø–æ —ç–∫—Ä–∞–Ω—É, —Å–æ–±–∏—Ä–∞–π –º–æ–Ω–µ—Ç—ã, –∫–∞—á–∞–π –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥, —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–π —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.\n"
        "–ó–æ–≤–∏ –¥—Ä—É–∑–µ–π ‚Äî –≤–º–µ—Å—Ç–µ –±–æ–Ω—É—Å—ã –±–æ–ª—å—à–µ!",
        reply_markup=keyboard
    )

@dp.callback_query(lambda q: q.data == 'how_to_earn')
async def button_handler(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    username = callback_query.from_user.username or callback_query.from_user.first_name or "User"
    web_app_url = f"{apiserv}/?user_id={user_id}&username={username}"
    keyboards = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ò–≥—Ä–∞—Ç—å –≤ 1 –∫–ª–∏–∫ üéÆ', web_app=WebAppInfo(url=web_app_url))],
        [InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª üì¢', url=your_channel)]
    ])
    await callback_query.message.answer(
        "–ö–∞–∫ –∏–≥—Ä–∞—Ç—å –≤ MMMCoin?\n"
        "üí∞ Tap to earn ‚Äî –¢–∞–ø–∞–π –ø–æ —ç–∫—Ä–∞–Ω—É –∏ —Å–æ–±–∏—Ä–∞–π –º–æ–Ω–µ—Ç—ã.\n"
        "‚õè Mine ‚Äî –ü—Ä–æ–∫–∞—á–∏–≤–∞–π –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞.\n"
        "‚è∞ –ü—Ä–∏–±—ã–ª—å –≤ —á–∞—Å ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—ã –æ—Ñ—Ñ–ª–∞–π–Ω.\n"
        "üìà LVL ‚Äî –ß–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –∑–∞—Ä–∞–±–æ—Ç–æ–∫.\n"
        "üë• Friends ‚Äî –∑–æ–≤–∏ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã –≤–º–µ—Å—Ç–µ.",
        reply_markup=keyboards
    )
    await callback_query.answer()

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    asyncio.run(dp.start_polling(bot))